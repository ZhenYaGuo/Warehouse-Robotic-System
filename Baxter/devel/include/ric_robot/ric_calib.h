// Generated by gencpp from file ric_robot/ric_calib.msg
// DO NOT EDIT!


#ifndef RIC_ROBOT_MESSAGE_RIC_CALIB_H
#define RIC_ROBOT_MESSAGE_RIC_CALIB_H

#include <ros/service_traits.h>


#include <ric_robot/ric_calibRequest.h>
#include <ric_robot/ric_calibResponse.h>


namespace ric_robot
{

struct ric_calib
{

typedef ric_calibRequest Request;
typedef ric_calibResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ric_calib
} // namespace ric_robot


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::ric_robot::ric_calib > {
  static const char* value()
  {
    return "05455c81c9527b2688b298e9bec522a4";
  }

  static const char* value(const ::ric_robot::ric_calib&) { return value(); }
};

template<>
struct DataType< ::ric_robot::ric_calib > {
  static const char* value()
  {
    return "ric_robot/ric_calib";
  }

  static const char* value(const ::ric_robot::ric_calib&) { return value(); }
};


// service_traits::MD5Sum< ::ric_robot::ric_calibRequest> should match 
// service_traits::MD5Sum< ::ric_robot::ric_calib > 
template<>
struct MD5Sum< ::ric_robot::ric_calibRequest>
{
  static const char* value()
  {
    return MD5Sum< ::ric_robot::ric_calib >::value();
  }
  static const char* value(const ::ric_robot::ric_calibRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::ric_robot::ric_calibRequest> should match 
// service_traits::DataType< ::ric_robot::ric_calib > 
template<>
struct DataType< ::ric_robot::ric_calibRequest>
{
  static const char* value()
  {
    return DataType< ::ric_robot::ric_calib >::value();
  }
  static const char* value(const ::ric_robot::ric_calibRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::ric_robot::ric_calibResponse> should match 
// service_traits::MD5Sum< ::ric_robot::ric_calib > 
template<>
struct MD5Sum< ::ric_robot::ric_calibResponse>
{
  static const char* value()
  {
    return MD5Sum< ::ric_robot::ric_calib >::value();
  }
  static const char* value(const ::ric_robot::ric_calibResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::ric_robot::ric_calibResponse> should match 
// service_traits::DataType< ::ric_robot::ric_calib > 
template<>
struct DataType< ::ric_robot::ric_calibResponse>
{
  static const char* value()
  {
    return DataType< ::ric_robot::ric_calib >::value();
  }
  static const char* value(const ::ric_robot::ric_calibResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // RIC_ROBOT_MESSAGE_RIC_CALIB_H
