// Generated by gencpp from file ric_board/setParam.msg
// DO NOT EDIT!


#ifndef RIC_BOARD_MESSAGE_SETPARAM_H
#define RIC_BOARD_MESSAGE_SETPARAM_H

#include <ros/service_traits.h>


#include <ric_board/setParamRequest.h>
#include <ric_board/setParamResponse.h>


namespace ric_board
{

struct setParam
{

typedef setParamRequest Request;
typedef setParamResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct setParam
} // namespace ric_board


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::ric_board::setParam > {
  static const char* value()
  {
    return "9ebccf07ebf9b4b1423752555394e1fc";
  }

  static const char* value(const ::ric_board::setParam&) { return value(); }
};

template<>
struct DataType< ::ric_board::setParam > {
  static const char* value()
  {
    return "ric_board/setParam";
  }

  static const char* value(const ::ric_board::setParam&) { return value(); }
};


// service_traits::MD5Sum< ::ric_board::setParamRequest> should match 
// service_traits::MD5Sum< ::ric_board::setParam > 
template<>
struct MD5Sum< ::ric_board::setParamRequest>
{
  static const char* value()
  {
    return MD5Sum< ::ric_board::setParam >::value();
  }
  static const char* value(const ::ric_board::setParamRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::ric_board::setParamRequest> should match 
// service_traits::DataType< ::ric_board::setParam > 
template<>
struct DataType< ::ric_board::setParamRequest>
{
  static const char* value()
  {
    return DataType< ::ric_board::setParam >::value();
  }
  static const char* value(const ::ric_board::setParamRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::ric_board::setParamResponse> should match 
// service_traits::MD5Sum< ::ric_board::setParam > 
template<>
struct MD5Sum< ::ric_board::setParamResponse>
{
  static const char* value()
  {
    return MD5Sum< ::ric_board::setParam >::value();
  }
  static const char* value(const ::ric_board::setParamResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::ric_board::setParamResponse> should match 
// service_traits::DataType< ::ric_board::setParam > 
template<>
struct DataType< ::ric_board::setParamResponse>
{
  static const char* value()
  {
    return DataType< ::ric_board::setParam >::value();
  }
  static const char* value(const ::ric_board::setParamResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // RIC_BOARD_MESSAGE_SETPARAM_H
